#!/usr/bin/env bash
# Usage: script/publish
#

set -euo pipefail
IFS=$'\n\t'

DRYRUN=

abort() {
  printf 'Aborting: %s\n' "$1" >&2
  exit 1
}

assert_release_notes() {
  test -s "$RELNOTES"
}

github_push() {
  git push --follow-tags ${DRYRUN:+--dry-run}
}

github_release() {
  local message
  printf -v message 'Bats %s\n\n%s' "${TAG#v}" "$(<"$RELNOTES")"

  hub release create --browse --message="$message" ${DRYRUN:+--draft} "$TAG"
}

npm_publish() {
  local publish=${DRYRUN:+pack}
  npm ${publish:-publish}
}

homebrew_pr() {
  "$(npm bin)"/brew-publish bats-core "$TAG" -g bats-core/bats-core ${DRYRUN:+-n}
}

while getopts ':dn' opt; do
  case $opt in
  d) set -x ;;
  # f) force=--force ;;
  n) DRYRUN=true ;;
  :) abort "Option -$OPTARG requires an argument." ;;
  \?) abort "Invalid option: -$OPTARG" ;;
  esac
done

# set after opt parsing so set-x is more helpful
TAG="$(git describe --tags --exact-match)"
RELNOTES="$(git rev-parse --git-dir)/RELNOTES"

assert_release_notes

github_push
github_release
npm_publish
homebrew_pr
